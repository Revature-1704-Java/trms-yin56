
--DROP TABLE DIRECT_SUPERVISOR;


DROP TABLE EVENT;
DROP TABLE EVENT_TYPE;
DROP TABLE GRADINGFORMAT;
DROP TABLE REIMBURSEMENT;
DROP TABLE EMPLOYEE;
DROP TABLE EMPLOYEETYPE;


CREATE TABLE EMPLOYEETYPE(
    
    EMPTYPE_ID integer NOT NULL, -- foreign key to employee
    EMPTYPE_NAME varchar2(50) NOT NUlL, 
    
    CONSTRAINT PK_EMPTYPEID PRIMARY KEY (EMPTYPE_ID) 
);


CREATE TABLE EMPLOYEE (
    EMPLOYEEID number NOT NULL,
    FIRSTNAME varchar2(100) NOT NULL,
    LASTNAME varchar2(100) NOT NULL,
    PASSWD varchar2(100) NOT NULL,
    USERNAME varchar2(100) NOT NULL,
    EMAIL varchar2(50) NOT NULL,
    SUPERVISOR integer,
    DEPT_HEAD integer,
    AMOUNT_USED number NOT NULL,
    EMPLOYEETYPEID integer NOT NULL,

    
    CONSTRAINT PK_EMPLOYEE PRIMARY KEY (EMPLOYEEID)
);

CREATE TABLE EVENT_TYPE(
    EVTTYPE_ID INTEGER NOT NULL,
    EVTTYPE_NAME VARCHAR2(50) NOT NULL,
    EVTTYPE_COVERAGE NUMBER NOT NULL,
    
    CONSTRAINT PK_EVTTYPE PRIMARY KEY (EVTTYPE_ID)
);


CREATE TABLE GRADINGFORMAT(
    GF_ID INTEGER NOT NULL,
    GF_TYPE VARCHAR2(50) NOT NULL,
    GF_PASSING NUMBER NOT NULL,
    
    CONSTRAINT PK_GFID PRIMARY KEY (GF_ID)
    
);


CREATE TABLE EVENT(
    EVT_ID INTEGER NOT NULL,
    EVTTYPE_ID INTEGER NOT NULL,
    RID INTEGER NOT NULL,
    LOCAT VARCHAR2(50) NOT NULL,
    DESCR VARCHAR2(200) NOT NULL,
    DATE_START DATE NOT NULL,
    HOURS NUMBER NOT NULL,
    COST_AMT NUMBER NOT NULL,
    sREASON VARCHAR2(200) NOT NULL,
    TIME_MISSED NUMBER NOT NULL,
    COMPLETED INTEGER NOT NULL,
    GF_ID INTEGER NOT NULL,
    
    CONSTRAINT PK_EVTID PRIMARY KEY (EVT_ID)
);

CREATE TABLE REIMBURSEMENT(
    RID INTEGER NOT NULL,
    COST_AMT number NOT NULL,
    DESCRIPTION varchar2(100) NOT NULL,
    EMPLOYEEID INTEGER NOT NULL,
    SUBMIT_DATE DATE NOT NULL,
    SUPER_APR INTEGER NOT NULL,
    DEPT_ARR INTEGER NOT NULL,
    BENCO_APR INTEGER NOT NULL,
    CHANGED_AMT NUMBER,
    EXCEED_REASON VARCHAR(200),
    EXCEED_AMT NUMBER,
    
    CONSTRAINT PK_REIMBURSEMENT PRIMARY KEY (RID)
);


--employeetype
--event table- (id, type, coverage)
--grading format table(id, type, passing)
--file table(fileid, rid, filepath, file_desc)





ALTER TABLE REIMBURSEMENT ADD CONSTRAINT FK_EMPLOYEEID
    FOREIGN KEY (EMPLOYEEID) REFERENCES EMPLOYEE (EMPLOYEEID);
    
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_DEPTHEAD
    FOREIGN KEY (DEPT_HEAD) REFERENCES EMPLOYEE (EMPLOYEEID);
    
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_SUPERVISOR
    FOREIGN KEY (SUPERVISOR) REFERENCES EMPLOYEE (EMPLOYEEID);
    
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEETYPEID
    FOREIGN KEY (EMPLOYEETYPEID) REFERENCES EMPLOYEETYPE (EMPTYPE_ID);
    
ALTER TABLE EVENT ADD CONSTRAINT FK_RID
    FOREIGN KEY (RID) REFERENCES REIMBURSEMENT (RID);
    
ALTER TABLE EVENT ADD CONSTRAINT FK_EVTTYPE
    FOREIGN KEY (EVTTYPE_ID) REFERENCES EVENT_TYPE (EVTTYPE_ID);
    
ALTER TABLE EVENT ADD CONSTRAINT FK_GFID
    FOREIGN KEY (GF_ID) REFERENCES GRADINGFORMAT (GF_ID);




--INSERT VALUES-----------------------------------------------------------------


/*
INSERT INTO EMPLOYEE
VALUES(1, 'Sam', 'Yin', 'lala', 'samy', 'samyin@email.com', 1, 1000);

INSERT INTO REIMBURSEMENT
VALUES(1, 540, 'university courses', 1); 
*/
/*    


INSERT INTO REIMBURSEMENT
VALUES(3, 230); 
*/
/*    
INSERT INTO EMPLOYEEE
VALUES(1, 'Sam', 'Yin', 'lala', 'samy', 1, 1);
INSERT INTO EMPLOYEEE
VALUES(2, 'Alex', 'Yin', 'lsala', 'alexy', 2, 0);
INSERT INTO EMPLOYEEE
VALUES(3, 'Ben', 'Yin', 'lsdfla', 'beben', 3, 0);
*/

/*

CREATE SEQUENCE inc_employ START WITH 1;
CREATE SEQUENCE inc_emprid START WITH 1;
CREATE SEQUENCE inc_reimb START WITH 1;

CREATE OR REPLACE TRIGGER inc_employ
BEFORE INSERT ON EMPLOYEEE 
FOR EACH ROW
BEGIN
  SELECT inc_employ.NEXTVAL
  INTO   :new.employeeid
  FROM   dual;
END;
/


CREATE OR REPLACE TRIGGER inc_emprid
BEFORE INSERT ON EMPLOYEEE 
FOR EACH ROW
BEGIN
  SELECT inc_emprid.NEXTVAL
  INTO   :new.rid
  FROM   dual;
END;
/

CREATE OR REPLACE TRIGGER inc_reimb
BEFORE INSERT ON REIMBURSEMENT
FOR EACH ROW
BEGIN
  SELECT inc_reimb.NEXTVAL
  INTO   :new.rid
  FROM   dual;
END;
/
*/

commit;